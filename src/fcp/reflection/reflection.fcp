version: "3"

struct MetaData {
    line @0: i32,
    end_line @1: i32,
    column @2: i32,
    end_column @3: i32,
    start_pos @4: i32,
    end_pos @5: i32,
    filename @6: str,
}

struct Type {
    name @0: str,
    size @1: u32,
    type @2: str,
}

struct StructField {
    name @0: str,
    field_id @1: u32,
    type @2: [Type],
    unit @3: Optional[str],
    min_value @4: Optional[f64],
    max_value @5: Optional[f64],
    meta @6: Optional[MetaData],
}

struct Struct {
    name @0: str,
    fields @1: [StructField],
    meta @2: Optional[MetaData],
}

struct Enumeration {
    name @0: str,
    value @1: i32,
    meta @2: Optional[MetaData],
}

struct Enum {
    name @0: str,
    enumeration @1: [Enumeration],
    meta @2: Optional[MetaData],
}

struct DictField {
    name @0: str,
    value @1: str,
}

struct SignalBlock {
    name @0: str,
    fields @1: [DictField],
    meta @2: Optional[MetaData],
}

struct Impl {
    name @0: str,
    protocol @1: str,
    type @3: str,
    fields @4: [DictField],
    signals @5: [SignalBlock],
    meta @6: Optional[MetaData],
}

struct Method {
    name @0: str,
    id @1: u32,
    input @2: str,
    output @3: str,
    meta @4: Optional[MetaData],
}

struct Service {
    name @0: str,
    id @1: u32,
    methods @2: [Method],
    meta @3: Optional[MetaData],
}

struct Fcp {
    structs @0: [Struct],
    enums @1: [Enum],
    impls @2: [Impl],
    services @3: [Service],
    version @4: str,
}
