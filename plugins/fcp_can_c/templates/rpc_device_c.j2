#include "{{ device_name_snake }}_rpc.h"
#include <string.h>


{% if device_name == "global" %}
/*---------------------------------------- RPC Dispacher -----------------------------------------*/
bool can_service_dispatch(const CanFrame *frame, void (*send)(const CanFrame *)) {    
    if (frame->id != RPC_GET_ID) {
        return false;
    }

    const RpcMessage *call = (const RpcMessage *) frame->data;

    CanFrame response;
    response.id = RPC_ANS_ID;
    response.dlc = 8;

    RpcMessage *res = (RpcMessage *) response.data;
    res->id.rpc_id = call->id.rpc_id;

    CanServiceStruct service = {
        .request = call,
        .response = res
    };

    /* TODO: implement handling logic based on service_id/method_id */

    res->args[0] = 0xFE;                           /* Not handled */
    send(&response);
    return false;
}
{% endif %}
