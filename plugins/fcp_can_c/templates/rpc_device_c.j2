#include "{{ device_name_snake }}_rpc.h"
#include "{{ device_name_snake }}_can.h"
#include <string.h>

/*---------------------------------------- RPC Dispacher -----------------------------------------*/
bool can_service_dispatch(const CanFrame *frame, void (*send)(const CanFrame *)) {

    const RpcMessage *call = (const RpcMessage *) frame->data;

    CanFrame response;
    response.id = {{ device_name_snake | upper }}_RPC_ANS_ID;
    response.dlc = 8;

    RpcMessage *res = (RpcMessage *) response.data;
    res->id.rpc_id = call->id.rpc_id;

    CanServiceStruct service = {
        .request = call,
        .response = res
    };

   bool handled = can_service_handle(&service);

    if (!handled) {
        res->args[0] = 0xFE;        // Not handled
    }

    send(&response);
    return handled;
}

