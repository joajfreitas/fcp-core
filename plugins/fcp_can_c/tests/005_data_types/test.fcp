version: "3"

/*Small Endian*/

struct U8S {
    val @0: u8,
}

impl can for U8S {
    id: 1,
    device: "ecu",
}

struct U16S {
    val @0: u16,
}

impl can for U16S {
    id: 2,
    device: "ecu",
}

struct U32S {
    val @0: u32,
}

impl can for U32S {
    id: 3,
    device: "ecu",
}

struct U64S {
    val @0: u64,
}

impl can for U64S {
    id: 4,
    device: "ecu",
}

struct I8S {
    val @0: i8,
}

impl can for I8S {
    id: 5,
    device: "ecu",
}

struct I16S {
    val @0: i16,
}

impl can for I16S {
    id: 6,
    device: "ecu",
}

struct I32S {
    val @0: i32,
}

impl can for I32S {
    id: 7,
    device: "ecu",
}

struct I64S {
    val @0: i64,
}

impl can for I64S {
    id: 8,
    device: "ecu",
}

struct F32S {
    val @0: f32,
}

impl can for F32S {
    id: 9,
    device: "ecu",
}

struct F64S {
    val @0: f64,
}

impl can for F64S {
    id: 10,
    device: "ecu",
}

/*Big Endian*/


struct U8B {
    val @0: u8,
}

impl can for U8B {
    id: 11,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct U16B {
    val @0: u16,
}

impl can for U16B {
    id: 12,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct U32B {
    val @0: u32,
}

impl can for U32B {
    id: 13,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct U64B {
    val @0: u64,
}

impl can for U64B {
    id: 14,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct I8B {
    val @0: i8,
}

impl can for I8B {
    id: 15,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct I16B {
    val @0: i16,
}

impl can for I16B {
    id: 16,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct I32B {
    val @0: i32,
}

impl can for I32B {
    id: 17,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct I64B {
    val @0: i64,
}

impl can for I64B {
    id: 18,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct F32B {
    val @0: f32,
}

impl can for F32B {
    id: 19,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct F64B {
    val @0: f64,
}

impl can for F64B {
    id: 20,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

/*Enum*/

enum Vals {
    S0 = 1,
    S1 = 2,
}

struct UEnumS {
    val @0: u16,
    val1 @1: Vals,
}

impl can for UEnumS {
    id: 21,
    device: "ecu",
}

struct IEnumS {
    val @0: i16,
    val1 @1: Vals,
}

impl can for IEnumS {
    id: 22,
    device: "ecu",
}

struct UEnumB {
    val @0: u16,
    val1 @1: Vals,
}

impl can for UEnumB {
    id: 23,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}

struct IEnumB {
    val @0: i16,
    val1 @1: Vals,
}

impl can for IEnumB {
    id: 24,
    device: "ecu",

    signal val {
        endianness: "big",
    },
}
